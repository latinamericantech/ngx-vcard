import { e } from '../../helpers';
export function propertyToVCardString(property) {
    let str = '';
    if (property.language) {
        str += ';LANGUAGE=' + e(property.language);
    }
    if (property.value) {
        str += ';VALUE=' + e(property.value);
    }
    if (property.altid) {
        str += ';ALTID=' + e(property.altid);
    }
    if (property.pid) {
        str += ';PID=' + property.pid.map(s => e(s)).join(',');
    }
    if (property.type) {
        if (Array.isArray(property.type)) {
            if (property.type.length === 1) {
                str += ';TYPE=' + property.type[0];
            }
            else {
                str += ';TYPE="' + property.type.map(s => s.toLowerCase()).join(',') + '"';
            }
        }
        else {
            str += ';TYPE=' + property.type;
        }
    }
    if (property.mediatype) {
        str += ';MEDIATYPE=' + e(property.mediatype);
    }
    if (property.pref) {
        str += ';PREF=' + property.pref;
    }
    if (property.calscale) {
        str += ';CALSCALE=' + e(property.calscale);
    }
    if (property.sortas) {
        str += ';SORT-AS="' + property.sortas.map(s => e(s)).join(',') + '"';
    }
    if (property.geo) {
        str += ';GEO=' + e(property.geo);
    }
    if (property.timezone) {
        str += ';TZ=' + e(property.timezone);
    }
    return str;
}
export function isPropertyWithParameters(object) {
    const test = object;
    if (test == null || test.param == null || test.value == null) {
        return false;
    }
    return (test.param.language !== undefined ||
        test.param.value !== undefined ||
        test.param.pref !== undefined ||
        test.param.altid !== undefined ||
        test.param.pid !== undefined ||
        test.param.type !== undefined ||
        test.param.mediatype !== undefined ||
        test.param.calscale !== undefined ||
        test.param.sortas !== undefined ||
        test.param.geo !== undefined ||
        test.param.timezone !== undefined);
}
export function isPropertyWithParametersAddressValue(object) {
    const test = object;
    if (test == null || test.param == null || test.value == null) {
        return false;
    }
    return (test.param.language !== undefined ||
        test.param.value !== undefined ||
        test.param.pref !== undefined ||
        test.param.altid !== undefined ||
        test.param.pid !== undefined ||
        test.param.type !== undefined ||
        test.param.mediatype !== undefined ||
        test.param.calscale !== undefined ||
        test.param.sortas !== undefined ||
        test.param.geo !== undefined ||
        test.param.timezone !== undefined);
}
//# sourceMappingURL=data:application/json;base64,