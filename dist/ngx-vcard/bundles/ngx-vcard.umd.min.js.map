{"version":3,"sources":["../../../projects/ngx-vcard/src/lib/types/vCardEncoding.ts","../../../projects/ngx-vcard/src/lib/helpers.ts","../../../projects/ngx-vcard/src/lib/types/parameter/BasicPropertyParameters.type.ts","../../../projects/ngx-vcard/src/lib/ngx-vcard.formatter.ts","../../../projects/ngx-vcard/src/lib/download-vcard.directive.ts","../../../projects/ngx-vcard/src/lib/ngx-vcard.module.ts"],"names":["VCardEncoding","e","value","replace","propertyToVCardString","property","str","language","altid","pid","map","s","join","type","Array","isArray","length","toLowerCase","mediatype","pref","calscale","sortas","geo","timezone","isPropertyWithParameters","object","test","param","undefined","isPropertyWithParametersAddressValue","VCardFormatter","getVCardAsBlob","vCard","encoding","none","data","getVCardAsString","Blob","encodingPrefix","version","majorVersion","getMajorVersion","formattedVCardString","formattedName","name","firstNames","addtionalNames","lastNames","filter","string","namePrefix","nameSuffix","nickname","gender","sex","text","uid","birthday","YYYYMMDD","anniversary","forEach","organization","address","getFormattedAddress","telephone","element","email","title","logo","photo","homeFax","number","workFax","role","url","urlNotSet","hasProp","home","work","note","socialUrls","key","hasOwnProperty","source","rev","label","postOfficeBox","extendedAddress","street","locality","region","postalCode","countryName","date","toLocaleDateString","majorVersionString","slice","isNaN","Number","parseInt","obj","Object","prototype","call","DownloadVCardDirective","this","onclick","blob","filename","download","window","navigator","msSaveBlob","a_1","document","createElement","url_1","URL","createObjectURL","style","display","href","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","Directive","args","selector","ElementRef","Input","HostListener","NgModule","imports","declarations","exports"],"mappings":"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","sourcesContent":["export enum VCardEncoding {\r\n  none = '',\r\n  utf8 = ';CHARSET=utf-8'\r\n}\r\n","/**\r\n * Encodes string\r\n */\r\nexport function e(value: string | undefined): string {\r\n  if (value) {\r\n    if (typeof value !== 'string') {\r\n      value = '' + value;\r\n    }\r\n    return value\r\n      .replace(/\\n/g, '\\n')\r\n      .replace(/,/g, ',')\r\n      .replace(/;/g, ';');\r\n  }\r\n  return '';\r\n}\r\n\r\n/**\r\n * Return new line characters\r\n */\r\nexport function nl(): string {\r\n  return '\\n';\r\n}\r\n","import { Address } from '../vCard';\r\nimport { e } from '../../helpers';\r\n\r\n/**\r\n * A property can have attributes associated with it.\r\n * These \"property parameters\" contain meta-information about the property or the property value.\r\n * @link https://tools.ietf.org/html/rfc6350#section-5\r\n */\r\nexport interface BasicPropertyParameters {\r\n  /**\r\n   * The LANGUAGE property parameter is used to identify data in multiple languages.\r\n   * @kind Property: LANGUAGE\r\n   * @link https://tools.ietf.org/html/rfc6350#section-5.1\r\n   *\r\n   */\r\n  language?: string;\r\n  /**\r\n   * The VALUE parameter is OPTIONAL, used to identify the value type (data type) and format of the value.\r\n   * @kind Property: VALUE\r\n   * @link https://tools.ietf.org/html/rfc6350#section-5.2\r\n   */\r\n  value?:\r\n    | 'text'\r\n    | 'uri'\r\n    | 'date'\r\n    | 'time'\r\n    | 'date-time'\r\n    | 'date-and-or-time'\r\n    | 'timestamp'\r\n    | 'boolean'\r\n    | 'integer'\r\n    | 'float'\r\n    | 'utc-offset'\r\n    | 'language-tag';\r\n  /**\r\n   * The PREF parameter is OPTIONAL and is used to indicate that the corresponding instance of a property is preferred by the vCard author.\r\n   * Its value MUST be an integer between 1 and 100 that quantifies the level of preference.\r\n   * Lower values correspond to a higher level of preference, with 1 being most preferred.\r\n   * @kind Property: PREF\r\n   * @link https://tools.ietf.org/html/rfc6350#section-5.3\r\n   */\r\n  pref?:\r\n    | 1\r\n    | 2\r\n    | 3\r\n    | 4\r\n    | 5\r\n    | 6\r\n    | 7\r\n    | 8\r\n    | 9\r\n    | 10\r\n    | 11\r\n    | 12\r\n    | 13\r\n    | 14\r\n    | 15\r\n    | 16\r\n    | 17\r\n    | 18\r\n    | 19\r\n    | 20\r\n    | 21\r\n    | 22\r\n    | 23\r\n    | 24\r\n    | 25\r\n    | 26\r\n    | 27\r\n    | 28\r\n    | 29\r\n    | 30\r\n    | 31\r\n    | 32\r\n    | 33\r\n    | 34\r\n    | 35\r\n    | 36\r\n    | 37\r\n    | 38\r\n    | 39\r\n    | 40\r\n    | 41\r\n    | 42\r\n    | 43\r\n    | 44\r\n    | 45\r\n    | 46\r\n    | 47\r\n    | 48\r\n    | 49\r\n    | 50\r\n    | 51\r\n    | 52\r\n    | 53\r\n    | 54\r\n    | 55\r\n    | 56\r\n    | 57\r\n    | 58\r\n    | 59\r\n    | 60\r\n    | 61\r\n    | 62\r\n    | 63\r\n    | 64\r\n    | 65\r\n    | 66\r\n    | 67\r\n    | 68\r\n    | 69\r\n    | 70\r\n    | 71\r\n    | 72\r\n    | 73\r\n    | 74\r\n    | 75\r\n    | 76\r\n    | 77\r\n    | 78\r\n    | 79\r\n    | 80\r\n    | 81\r\n    | 82\r\n    | 83\r\n    | 84\r\n    | 85\r\n    | 86\r\n    | 87\r\n    | 88\r\n    | 89\r\n    | 90\r\n    | 91\r\n    | 92\r\n    | 93\r\n    | 94\r\n    | 95\r\n    | 96\r\n    | 97\r\n    | 98\r\n    | 99\r\n    | 100;\r\n  /**\r\n   * The ALTID parameter is used to \"tag\" property instances as being alternative representations of the same logical property.\r\n   * For example, translations of a property in multiple languages generates multiple property instances\r\n   * having different LANGUAGE parameter that are tagged with the same ALTID value.\r\n   * @kind Property: ALTID\r\n   * @link https://tools.ietf.org/html/rfc6350#section-5.4\r\n   */\r\n  altid?: string;\r\n  /**\r\n   * The PID parameter is used to identify a specific property among multiple instances.\r\n   * @kind Property: PID\r\n   * @link https://tools.ietf.org/html/rfc6350#section-5.5\r\n   */\r\n  pid?: string[];\r\n  /**\r\n   * The TYPE parameter has multiple, different uses.\r\n   * In general, it is a way of specifying class characteristics of the associated property.\r\n   * @kind Property: TYPE\r\n   * @link https://tools.ietf.org/html/rfc6350#section-5.6\r\n   */\r\n  type?:\r\n    | Array<'work' | 'home' | 'text' | 'voice' | 'fax' | 'cell' | 'video' | 'pager' | 'textphone'>\r\n    | 'work'\r\n    | 'home'\r\n    | 'text'\r\n    | 'voice'\r\n    | 'fax'\r\n    | 'cell'\r\n    | 'video'\r\n    | 'pager'\r\n    | 'textphone';\r\n  /**\r\n   * The MEDIATYPE parameter is used with properties whose value is a URI.\r\n   * @kind Property: MEDIATYPE\r\n   * @link https://tools.ietf.org/html/rfc6350#section-5.7\r\n   */\r\n  mediatype?: string;\r\n  /**\r\n   * The CALSCALE parameter is used to define the calendar system in which a date or date-time value is expressed.\r\n   * @kind Property: CALSCALE\r\n   * @link https://tools.ietf.org/html/rfc6350#section-5.8\r\n   */\r\n  calscale?: 'gregorian';\r\n  /**\r\n   * The \"sort-as\" parameter is used to specify the string to be used for national-language-specific sorting.\r\n   * Without this information, sorting algorithms could incorrectly sort this vCard within a sequence of sorted vCards.\r\n   * @kind Property: SORT-AS\r\n   * @link https://tools.ietf.org/html/rfc6350#section-5.9\r\n   */\r\n  sortas?: string[];\r\n  /**\r\n   * The GEO parameter can be used to indicate global positioning information that is specific to an address.\r\n   * @kind Property: GEO\r\n   * @link https://tools.ietf.org/html/rfc6350#section-5.10\r\n   */\r\n  geo?: string;\r\n  /**\r\n   * The TZ parameter can be used to indicate time zone information that is specific to an address.\r\n   * @kind Property: TZ\r\n   * @link https://tools.ietf.org/html/rfc6350#section-5.11\r\n   */\r\n  timezone?: string;\r\n}\r\n\r\nexport function propertyToVCardString(property: BasicPropertyParameters): string {\r\n  let str = '';\r\n  if (property.language) {\r\n    str += ';LANGUAGE=' + e(property.language);\r\n  }\r\n  if (property.value) {\r\n    str += ';VALUE=' + e(property.value);\r\n  }\r\n  if (property.altid) {\r\n    str += ';ALTID=' + e(property.altid);\r\n  }\r\n  if (property.pid) {\r\n    str += ';PID=' + property.pid.map(s => e(s)).join(',');\r\n  }\r\n  if (property.type) {\r\n    if (Array.isArray(property.type)) {\r\n      if (property.type.length === 1) {\r\n        str += ';TYPE=' + property.type[0];\r\n      } else {\r\n        str += ';TYPE=\"' + property.type.map(s => s.toLowerCase()).join(',') + '\"';\r\n      }\r\n    } else {\r\n      str += ';TYPE=' + property.type;\r\n    }\r\n  }\r\n  if (property.mediatype) {\r\n    str += ';MEDIATYPE=' + e(property.mediatype);\r\n  }\r\n  if (property.pref) {\r\n    str += ';PREF=' + property.pref;\r\n  }\r\n  if (property.calscale) {\r\n    str += ';CALSCALE=' + e(property.calscale);\r\n  }\r\n  if (property.sortas) {\r\n    str += ';SORT-AS=\"' + property.sortas.map(s => e(s)).join(',') + '\"';\r\n  }\r\n  if (property.geo) {\r\n    str += ';GEO=' + e(property.geo);\r\n  }\r\n  if (property.timezone) {\r\n    str += ';TZ=' + e(property.timezone);\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\nexport function isPropertyWithParameters(object: any): object is { value?: string; param?: BasicPropertyParameters } {\r\n  const test = <{ value?: string; param?: BasicPropertyParameters }>object;\r\n  if (test == null || test.param == null || test.value == null) {\r\n    return false;\r\n  }\r\n  return (\r\n    test.param.language !== undefined ||\r\n    test.param.value !== undefined ||\r\n    test.param.pref !== undefined ||\r\n    test.param.altid !== undefined ||\r\n    test.param.pid !== undefined ||\r\n    test.param.type !== undefined ||\r\n    test.param.mediatype !== undefined ||\r\n    test.param.calscale !== undefined ||\r\n    test.param.sortas !== undefined ||\r\n    test.param.geo !== undefined ||\r\n    test.param.timezone !== undefined\r\n  );\r\n}\r\n\r\nexport function isPropertyWithParametersAddressValue(\r\n  object: any\r\n): object is { value?: Address; param?: BasicPropertyParameters } {\r\n  const test = <{ value?: Address; param?: BasicPropertyParameters }>object;\r\n  if (test == null || test.param == null || test.value == null) {\r\n    return false;\r\n  }\r\n  return (\r\n    test.param.language !== undefined ||\r\n    test.param.value !== undefined ||\r\n    test.param.pref !== undefined ||\r\n    test.param.altid !== undefined ||\r\n    test.param.pid !== undefined ||\r\n    test.param.type !== undefined ||\r\n    test.param.mediatype !== undefined ||\r\n    test.param.calscale !== undefined ||\r\n    test.param.sortas !== undefined ||\r\n    test.param.geo !== undefined ||\r\n    test.param.timezone !== undefined\r\n  );\r\n}\r\n","import { VCard, Address } from './types/vCard';\r\nimport { VCardEncoding } from './types/vCardEncoding';\r\nimport {\r\n  isPropertyWithParameters,\r\n  propertyToVCardString,\r\n  BasicPropertyParameters,\r\n  isPropertyWithParametersAddressValue,\r\n} from './types/parameter/BasicPropertyParameters.type';\r\nimport { nl, e } from './helpers';\r\n\r\nexport class VCardFormatter {\r\n  public static getVCardAsBlob(vCard: VCard, encoding: VCardEncoding = VCardEncoding.none): Blob {\r\n    const data = VCardFormatter.getVCardAsString(vCard, encoding);\r\n    return new Blob([data], { type: 'text/vcard' });\r\n  }\r\n\r\n  /**\r\n   * Get formatted vCard in VCF format\r\n   */\r\n  public static getVCardAsString(vCard: VCard, encodingPrefix: VCardEncoding = VCardEncoding.none): string {\r\n    if (!vCard.version) {\r\n      vCard.version = '4.0';\r\n    }\r\n    const majorVersion = getMajorVersion(vCard.version);\r\n\r\n    let formattedVCardString = '';\r\n    formattedVCardString += 'BEGIN:VCARD' + nl();\r\n    formattedVCardString += 'VERSION:' + vCard.version + nl();\r\n\r\n    // const encodingPrefix = '';\r\n    let formattedName = '';\r\n    if (vCard.name == null) {\r\n      vCard.name = {};\r\n    }\r\n\r\n    let nameArray = [];\r\n    if (vCard.formattedName != null) {\r\n      nameArray = [vCard.formattedName.firstNames, vCard.formattedName.addtionalNames, vCard.formattedName.lastNames];\r\n    } else {\r\n      nameArray = [vCard.name.firstNames, vCard.name.addtionalNames, vCard.name.lastNames];\r\n    }\r\n\r\n    formattedName = nameArray.filter((string) => string != null).join(' ');\r\n\r\n    formattedVCardString += 'FN' + encodingPrefix + ':' + e(formattedName) + nl();\r\n\r\n    formattedVCardString +=\r\n      'N' +\r\n      encodingPrefix +\r\n      ':' +\r\n      [\r\n        e(vCard.name.lastNames),\r\n        e(vCard.name.firstNames),\r\n        e(vCard.name.addtionalNames),\r\n        e(vCard.name.namePrefix),\r\n        e(vCard.name.nameSuffix),\r\n      ].join(';') +\r\n      nl();\r\n\r\n    if (vCard.nickname && majorVersion >= 3) {\r\n      formattedVCardString += 'NICKNAME' + encodingPrefix + ':' + e(vCard.nickname) + nl();\r\n    }\r\n\r\n    if (vCard.gender) {\r\n      if (vCard.gender.sex) {\r\n        formattedVCardString += 'GENDER:' + e(vCard.gender.sex);\r\n        if (vCard.gender.text) {\r\n          formattedVCardString += ';' + e(vCard.gender.text);\r\n        }\r\n        formattedVCardString += nl();\r\n      } else {\r\n        formattedVCardString += 'GENDER:;' + e(vCard.gender.text) + nl();\r\n      }\r\n    }\r\n\r\n    if (vCard.uid) {\r\n      formattedVCardString += 'UID' + encodingPrefix + ':' + e(vCard.uid) + nl();\r\n    }\r\n\r\n    if (vCard.birthday) {\r\n      formattedVCardString += 'BDAY:' + YYYYMMDD(vCard.birthday) + nl();\r\n    }\r\n\r\n    if (vCard.anniversary) {\r\n      formattedVCardString += 'ANNIVERSARY:' + YYYYMMDD(vCard.anniversary) + nl();\r\n    }\r\n\r\n    if (vCard.language) {\r\n      vCard.language.forEach((language) => {\r\n        if (isPropertyWithParameters(language)) {\r\n          formattedVCardString += 'LANG' + propertyToVCardString(language.param) + ':' + e(language.value) + nl();\r\n        } else {\r\n          formattedVCardString += 'LANG:' + e(language) + nl();\r\n        }\r\n      });\r\n    }\r\n\r\n    if (vCard.organization) {\r\n      if (isPropertyWithParameters(vCard.organization)) {\r\n        formattedVCardString +=\r\n          'ORG' + propertyToVCardString(vCard.organization.param) + ':' + e(vCard.organization.value) + nl();\r\n      } else {\r\n        formattedVCardString += 'ORG' + encodingPrefix + ':' + e(vCard.organization) + nl();\r\n      }\r\n    }\r\n\r\n    if (vCard.address) {\r\n      vCard.address.forEach((address) => {\r\n        if (isPropertyWithParametersAddressValue(address)) {\r\n          formattedVCardString +=\r\n            'ADR' +\r\n            propertyToVCardString(address.param as BasicPropertyParameters) +\r\n            getFormattedAddress(address.value) +\r\n            nl();\r\n        } else {\r\n          formattedVCardString += 'ADR' + getFormattedAddress(address) + nl();\r\n        }\r\n      });\r\n    }\r\n\r\n    if (vCard.telephone) {\r\n      vCard.telephone.forEach((element) => {\r\n        if (!isPropertyWithParameters(element)) {\r\n          element = {\r\n            value: element,\r\n            param: {\r\n              type: 'voice',\r\n            },\r\n          };\r\n        }\r\n        formattedVCardString +=\r\n          'TEL' + propertyToVCardString(element.param as BasicPropertyParameters) + ':' + e(element.value) + nl();\r\n      });\r\n    }\r\n\r\n    if (vCard.email) {\r\n      vCard.email.forEach((email) => {\r\n        if (isPropertyWithParameters(email)) {\r\n          formattedVCardString += 'EMAIL' + propertyToVCardString(email.param) + ':' + e(email.value) + nl();\r\n        } else {\r\n          formattedVCardString += 'EMAIL:' + e(email) + nl();\r\n        }\r\n      });\r\n    }\r\n\r\n    if (vCard.title) {\r\n      formattedVCardString += 'TITLE' + encodingPrefix + ':' + e(vCard.title) + nl();\r\n    }\r\n\r\n    if (vCard.logo) {\r\n      if (isPropertyWithParameters(vCard.logo)) {\r\n        formattedVCardString += 'LOGO' + propertyToVCardString(vCard.logo.param) + ':' + e(vCard.logo.value) + nl();\r\n      } else {\r\n        formattedVCardString += 'LOGO:' + e(vCard.logo) + nl();\r\n      }\r\n    }\r\n\r\n    if (vCard.photo) {\r\n      if (isPropertyWithParameters(vCard.photo)) {\r\n        formattedVCardString += 'PHOTO' + propertyToVCardString(vCard.photo.param) + ':' + e(vCard.photo.value) + nl();\r\n      } else {\r\n        formattedVCardString += 'PHOTO:' + e(vCard.photo) + nl();\r\n      }\r\n    }\r\n\r\n    if (vCard.homeFax) {\r\n      vCard.homeFax.forEach(function (number) {\r\n        if (+majorVersion >= 4) {\r\n          formattedVCardString += 'TEL;VALUE=uri;TYPE=\"fax,home\":tel:' + e(number) + nl();\r\n        } else {\r\n          formattedVCardString += 'TEL;TYPE=HOME,FAX:' + e(number) + nl();\r\n        }\r\n      });\r\n    }\r\n\r\n    if (vCard.workFax) {\r\n      vCard.workFax.forEach(function (number) {\r\n        if (+majorVersion >= 4) {\r\n          formattedVCardString += 'TEL;VALUE=uri;TYPE=\"fax,work\":tel:' + e(number) + nl();\r\n        } else {\r\n          formattedVCardString += 'TEL;TYPE=WORK,FAX:' + e(number) + nl();\r\n        }\r\n      });\r\n    }\r\n\r\n    if (vCard.role) {\r\n      formattedVCardString += 'ROLE' + encodingPrefix + ':' + e(vCard.role) + nl();\r\n    }\r\n\r\n    if (vCard.url) {\r\n      let urlNotSet = true;\r\n      if (hasProp(vCard.url, 'home')) {\r\n        formattedVCardString += 'URL;type=WORK' + encodingPrefix + ':' + e((vCard.url as { home: string }).home) + nl();\r\n        urlNotSet = false;\r\n      }\r\n\r\n      if (hasProp(vCard.url, 'work')) {\r\n        formattedVCardString += 'URL;type=WORK' + encodingPrefix + ':' + e((vCard.url as { work: string }).work) + nl();\r\n        urlNotSet = false;\r\n      }\r\n      if (urlNotSet) {\r\n        formattedVCardString += 'URL' + encodingPrefix + ':' + e(vCard.url as string) + nl();\r\n      }\r\n    }\r\n\r\n    if (vCard.note) {\r\n      formattedVCardString += 'NOTE' + encodingPrefix + ':' + e(vCard.note) + nl();\r\n    }\r\n\r\n    if (vCard.socialUrls) {\r\n      for (const key in vCard.socialUrls) {\r\n        if (vCard.socialUrls.hasOwnProperty(key) && vCard.socialUrls[key]) {\r\n          formattedVCardString +=\r\n            'X-SOCIALPROFILE' + encodingPrefix + ';TYPE=' + key + ':' + e(vCard.socialUrls[key]) + nl();\r\n        }\r\n      }\r\n    }\r\n\r\n    if (vCard.source) {\r\n      if (isPropertyWithParameters(vCard.source)) {\r\n        formattedVCardString +=\r\n          'SOURCE' + encodingPrefix + propertyToVCardString(vCard.source.param) + ':' + e(vCard.source.value) + +nl();\r\n      } else {\r\n        formattedVCardString += 'SOURCE' + encodingPrefix + ':' + e(vCard.source) + nl();\r\n      }\r\n    }\r\n    if (vCard.rev) {\r\n      formattedVCardString += 'REV:' + vCard.rev + nl();\r\n    }\r\n    formattedVCardString += 'END:VCARD' + nl();\r\n    return formattedVCardString;\r\n  }\r\n}\r\n\r\n/**\r\n * Get formatted photo\r\n * @param photoType       Photo type (PHOTO, LOGO)\r\n * @param url             URL to attach photo from\r\n * @param mediaType       Media-type of photo (JPEG, PNG, GIF)\r\n */\r\nfunction getFormattedPhoto(\r\n  photoType: 'PHOTO' | 'LOGO',\r\n  url: string,\r\n  mediaType: string,\r\n  base64: boolean,\r\n  majorVersion: number\r\n) {\r\n  let params;\r\n\r\n  if (+majorVersion >= 4) {\r\n    params = base64 ? ';ENCODING=b;MEDIATYPE=image/' : ';MEDIATYPE=image/';\r\n  } else if (+majorVersion === 3) {\r\n    params = base64 ? ';ENCODING=b;TYPE=' : ';TYPE=';\r\n  } else {\r\n    params = base64 ? ';ENCODING=BASE64;' : ';';\r\n  }\r\n\r\n  const formattedPhoto = photoType + params + mediaType + ':' + e(url) + nl();\r\n  return formattedPhoto;\r\n}\r\n\r\n/**\r\n * Get formatted address\r\n */\r\nfunction getFormattedAddress(address: Address) {\r\n  return (\r\n    (address.label ? ';LABEL=\"' + e(address.label) + '\"' : '') +\r\n    ':' +\r\n    e(address.postOfficeBox) +\r\n    ';' +\r\n    e(address.extendedAddress) +\r\n    ';' +\r\n    e(address.street) +\r\n    ';' +\r\n    e(address.locality) +\r\n    ';' +\r\n    e(address.region) +\r\n    ';' +\r\n    e(address.postalCode) +\r\n    ';' +\r\n    e(address.countryName)\r\n  );\r\n}\r\n\r\n/**\r\n * Convert date to YYYYMMDD format\r\n */\r\nfunction YYYYMMDD(date: Date | undefined): string {\r\n  if (!date) {\r\n    return '';\r\n  }\r\n  return date.toLocaleDateString('se').replace(/\\D/g, ''); // use Swedish date format\r\n}\r\n\r\n/**\r\n * Get major version from version string\r\n */\r\nexport function getMajorVersion(version: string): number {\r\n  const majorVersionString = version ? version.slice(0, 1) : '4';\r\n  if (!isNaN(+majorVersionString)) {\r\n    return Number.parseInt(majorVersionString);\r\n  }\r\n  return 4;\r\n}\r\n\r\n/**\r\n * Determines if the object has the Property\r\n * @param obj Object to test\r\n * @param property Property to check\r\n */\r\nfunction hasProp(obj: any, property: string): boolean {\r\n  return Object.prototype.hasOwnProperty.call(obj, property);\r\n}\r\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\r\nimport { VCardFormatter } from './ngx-vcard.formatter';\r\nimport { VCard } from './types/vCard';\r\nimport { VCardEncoding } from './types/vCardEncoding';\r\n\r\n@Directive({\r\n  selector: '[vcdDownloadVCard]'\r\n})\r\nexport class DownloadVCardDirective {\r\n  constructor(private element: ElementRef) {}\r\n  @Input('vcdDownloadVCard')\r\n  vCard!: VCard;\r\n  @Input() public encoding: VCardEncoding = VCardEncoding.none;\r\n\r\n  @HostListener('click')\r\n  onclick() {\r\n    const blob = VCardFormatter.getVCardAsBlob(this.vCard, this.encoding);\r\n    let filename = 'vCard';\r\n    if (this.vCard.name != null) {\r\n      filename = this.vCard.name.firstNames + ' ' + this.vCard.name.lastNames + '.vcf';\r\n    }\r\n    this.download(blob, filename);\r\n  }\r\n\r\n  private download(data: Blob, filename: string) {\r\n    // IE 11\r\n    if (window.navigator.msSaveBlob) {\r\n      window.navigator.msSaveBlob(data, filename);\r\n    } else {\r\n      const a: HTMLAnchorElement = document.createElement('a');\r\n      const url = URL.createObjectURL(data);\r\n      (a as any).style.display = 'none';\r\n      a.href = url;\r\n      a.download = filename;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      setTimeout(() => {\r\n        document.body.removeChild(a);\r\n        window.URL.revokeObjectURL(url);\r\n      }, 1000);\r\n      \r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { DownloadVCardDirective } from './download-vcard.directive';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  declarations: [DownloadVCardDirective],\r\n  exports: [DownloadVCardDirective]\r\n})\r\nexport class NgxVcardModule { }\r\n"]}